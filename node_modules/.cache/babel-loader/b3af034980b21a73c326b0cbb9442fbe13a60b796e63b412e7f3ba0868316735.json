{"ast":null,"code":"var _jsxFileName = \"C:\\\\Aravind\\\\Clients\\\\Sam-Hyper-Business\\\\PayRoll-Software\\\\dremerz-payrollsoftware\\\\src\\\\Takeattendance.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react'\n\n// export default function takeattendance() {\n//   return (\n//     <div className=\"dashboard-content-one\" id=\"cont-1\">\n//     {/* Breadcubs Area Start Here */}\n//     <div className=\"breadcrumbs-area\">\n//       <h3>  Take Employee Attendance</h3>\n\n//     </div>\n//     {/* Breadcubs Area End Here */}\n//     {/* Teacher Table Area Start Here */}\n//     <div className=\"card height-auto\">\n//       <div className=\"card-body\">\n//         <div className=\"heading-layout1\">\n\n//         </div>\n\n//         <div className=\"table-responsive\">\n//         <table className=\"table display data-table text-nowrap\">\n//           <thead>\n//             <tr>\n//             <th>S.No</th>\n//               <th>Full Name</th>\n//               <th>Employee ID</th>\n//               <th>Absent</th> \n\n//             </tr>\n//           </thead>\n//           <tbody>\n\n//           </tbody>\n\n//         </table>\n//       </div>\n//       </div>\n//     </div>\n\n//   </div>\n//   )\n// }\nimport React, { useEffect, useState } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs, doc, updateDoc, deleteDoc, addDoc } from 'firebase/firestore/lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  // Your Firebase config here\n};\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nexport default function ViewEmployee() {\n  _s();\n  const [employeeData, setEmployeeData] = useState([]);\n  const [absentEmployees, setAbsentEmployees] = useState([]);\n  const handleInputChange = (e, id, field) => {\n    // Find the employee in the data by ID\n    const updatedData = employeeData.map(employee => {\n      if (employee.id === id) {\n        // Update the specific field with the new value\n        return {\n          ...employee,\n          [field]: e.target.value\n        };\n      }\n      return employee;\n    });\n\n    // Update the employeeData state with the updated data\n    setEmployeeData(updatedData);\n  };\n  const handleUpdate = async (id, updatedData) => {\n    try {\n      const employeeRef = doc(db, 'employeeDetails', id);\n      await updateDoc(employeeRef, updatedData);\n\n      // Update the employeeData state to reflect the changes\n      setEmployeeData(prevData => prevData.map(employee => employee.id === id ? {\n        ...employee,\n        ...updatedData\n      } : employee));\n      alert('Employee data updated successfully!');\n    } catch (error) {\n      console.error('Error updating employee data:', error);\n      alert('Error updating employee data. Please try again.');\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      // Delete the employee record from Firestore\n      const employeeRef = doc(db, 'employeeDetails', id);\n      await deleteDoc(employeeRef);\n\n      // Update the employeeData state to remove the deleted employee\n      setEmployeeData(prevData => prevData.filter(employee => employee.id !== id));\n      alert('Employee data deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting employee data:', error);\n      alert('Error deleting employee data. Please try again.');\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const itemsCol = collection(db, 'employeeDetails');\n      const itemSnapshot = await getDocs(itemsCol);\n      const data = itemSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setEmployeeData(data);\n    };\n    fetchData();\n  }, []);\n  const handleAttendanceChange = (e, id) => {\n    if (e.target.checked) {\n      // Mark employee as absent\n      setAbsentEmployees(prevAbsent => [...prevAbsent, id]);\n    } else {\n      // Mark employee as present\n      setAbsentEmployees(prevAbsent => prevAbsent.filter(absentId => absentId !== id));\n    }\n  };\n  const handleSaveAttendance = async () => {\n    try {\n      // Create a new collection \"employeeAttendance\" in the database\n      const attendanceCol = collection(db, 'employeeAttendance');\n\n      // Prepare the data for the new collection\n      const attendanceData = {\n        date: new Date().toISOString(),\n        absentEmployees: absentEmployees\n      };\n\n      // Add the data to the \"employeeAttendance\" collection\n      await addDoc(attendanceCol, attendanceData);\n\n      // Reset the absentEmployees state after saving\n      setAbsentEmployees([]);\n      alert('Attendance saved successfully!');\n    } catch (error) {\n      console.error('Error saving attendance:', error);\n      alert('Error saving attendance. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-content-one\",\n    id: \"cont-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table display data-table text-nowrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employeeData.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: employee.fullName,\n              onChange: e => handleInputChange(e, employee.id, 'fullName')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: absentEmployees.includes(employee.id),\n              onChange: e => handleAttendanceChange(e, employee.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleUpdateAll(),\n      children: \"Update All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleDeleteAll(),\n      children: \"Delete All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSaveAttendance(),\n      children: \"Save Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewEmployee, \"HGmEcpc3/VKYpubF/6q79LRExEo=\");\n_c = ViewEmployee;\nvar _c;\n$RefreshReg$(_c, \"ViewEmployee\");","map":{"version":3,"names":["React","useEffect","useState","initializeApp","getFirestore","collection","getDocs","doc","updateDoc","deleteDoc","addDoc","jsxDEV","_jsxDEV","firebaseConfig","app","db","ViewEmployee","_s","employeeData","setEmployeeData","absentEmployees","setAbsentEmployees","handleInputChange","e","id","field","updatedData","map","employee","target","value","handleUpdate","employeeRef","prevData","alert","error","console","handleDelete","filter","fetchData","itemsCol","itemSnapshot","data","docs","handleAttendanceChange","checked","prevAbsent","absentId","handleSaveAttendance","attendanceCol","attendanceData","date","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","fullName","onChange","includes","onClick","handleUpdateAll","handleDeleteAll","_c","$RefreshReg$"],"sources":["C:/Aravind/Clients/Sam-Hyper-Business/PayRoll-Software/dremerz-payrollsoftware/src/Takeattendance.jsx"],"sourcesContent":["// import React from 'react'\r\n\r\n// export default function takeattendance() {\r\n//   return (\r\n//     <div className=\"dashboard-content-one\" id=\"cont-1\">\r\n//     {/* Breadcubs Area Start Here */}\r\n//     <div className=\"breadcrumbs-area\">\r\n//       <h3>  Take Employee Attendance</h3>\r\n     \r\n//     </div>\r\n//     {/* Breadcubs Area End Here */}\r\n//     {/* Teacher Table Area Start Here */}\r\n//     <div className=\"card height-auto\">\r\n//       <div className=\"card-body\">\r\n//         <div className=\"heading-layout1\">\r\n          \r\n          \r\n//         </div>\r\n\r\n//         <div className=\"table-responsive\">\r\n//         <table className=\"table display data-table text-nowrap\">\r\n//           <thead>\r\n//             <tr>\r\n//             <th>S.No</th>\r\n//               <th>Full Name</th>\r\n//               <th>Employee ID</th>\r\n//               <th>Absent</th> \r\n \r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n           \r\n//           </tbody>\r\n          \r\n//         </table>\r\n//       </div>\r\n//       </div>\r\n//     </div>\r\n  \r\n//   </div>\r\n//   )\r\n// }\r\nimport React, { useEffect, useState } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  addDoc,\r\n} from 'firebase/firestore/lite';\r\n\r\nconst firebaseConfig = {\r\n  // Your Firebase config here\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\nexport default function ViewEmployee() {\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [absentEmployees, setAbsentEmployees] = useState([]);\r\n\r\n  const handleInputChange = (e, id, field) => {\r\n    // Find the employee in the data by ID\r\n    const updatedData = employeeData.map((employee) => {\r\n      if (employee.id === id) {\r\n        // Update the specific field with the new value\r\n        return { ...employee, [field]: e.target.value };\r\n      }\r\n      return employee;\r\n    });\r\n\r\n    // Update the employeeData state with the updated data\r\n    setEmployeeData(updatedData);\r\n  };\r\n\r\n  const handleUpdate = async (id, updatedData) => {\r\n    try {\r\n      const employeeRef = doc(db, 'employeeDetails', id);\r\n      await updateDoc(employeeRef, updatedData);\r\n\r\n      // Update the employeeData state to reflect the changes\r\n      setEmployeeData((prevData) =>\r\n        prevData.map((employee) => (employee.id === id ? { ...employee, ...updatedData } : employee))\r\n      );\r\n\r\n      alert('Employee data updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating employee data:', error);\r\n      alert('Error updating employee data. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      // Delete the employee record from Firestore\r\n      const employeeRef = doc(db, 'employeeDetails', id);\r\n      await deleteDoc(employeeRef);\r\n\r\n      // Update the employeeData state to remove the deleted employee\r\n      setEmployeeData((prevData) => prevData.filter((employee) => employee.id !== id));\r\n\r\n      alert('Employee data deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting employee data:', error);\r\n      alert('Error deleting employee data. Please try again.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const itemsCol = collection(db, 'employeeDetails');\r\n      const itemSnapshot = await getDocs(itemsCol);\r\n      const data = itemSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n      setEmployeeData(data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAttendanceChange = (e, id) => {\r\n    if (e.target.checked) {\r\n      // Mark employee as absent\r\n      setAbsentEmployees((prevAbsent) => [...prevAbsent, id]);\r\n    } else {\r\n      // Mark employee as present\r\n      setAbsentEmployees((prevAbsent) => prevAbsent.filter((absentId) => absentId !== id));\r\n    }\r\n  };\r\n\r\n  const handleSaveAttendance = async () => {\r\n    try {\r\n      // Create a new collection \"employeeAttendance\" in the database\r\n      const attendanceCol = collection(db, 'employeeAttendance');\r\n\r\n      // Prepare the data for the new collection\r\n      const attendanceData = {\r\n        date: new Date().toISOString(),\r\n        absentEmployees: absentEmployees,\r\n      };\r\n\r\n      // Add the data to the \"employeeAttendance\" collection\r\n      await addDoc(attendanceCol, attendanceData);\r\n\r\n      // Reset the absentEmployees state after saving\r\n      setAbsentEmployees([]);\r\n\r\n      alert('Attendance saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving attendance:', error);\r\n      alert('Error saving attendance. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-content-one\" id=\"cont-1\">\r\n      {/* ... Rest of the code ... */}\r\n      <table className=\"table display data-table text-nowrap\">\r\n        <thead>\r\n          {/* ... Table header ... */}\r\n        </thead>\r\n        <tbody>\r\n          {employeeData.map((employee) => (\r\n            <tr key={employee.id}>\r\n              <td>\r\n                <input type=\"text\" value={employee.fullName} onChange={(e) => handleInputChange(e, employee.id, 'fullName')} />\r\n              </td>\r\n              {/* ... Other table cells ... */}\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={absentEmployees.includes(employee.id)}\r\n                  onChange={(e) => handleAttendanceChange(e, employee.id)}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* Universal update button */}\r\n      <button onClick={() => handleUpdateAll()}>Update All</button>\r\n      {/* Universal delete button */}\r\n      <button onClick={() => handleDeleteAll()}>Delete All</button>\r\n      {/* Save attendance button */}\r\n      <button onClick={() => handleSaveAttendance()}>Save Attendance</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}