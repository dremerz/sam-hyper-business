{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { initializeApp } from 'firebase/app';\n// import { getFirestore, collection, getDocs, doc, addDoc } from 'firebase/firestore/lite';\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyA95pWNegQN52jOC8gB2cs9s2BRMHbERR4\",\n//   authDomain: \"sam-hyper-business.firebaseapp.com\",\n//   projectId: \"sam-hyper-business\",\n//   storageBucket: \"sam-hyper-business.appspot.com\",\n//   messagingSenderId: \"644102757906\",\n//   appId: \"1:644102757906:web:50d98f81cb35e9e52842cb\",\n//   measurementId: \"G-F6J99L8CHG\"\n// };\n\n// const app = initializeApp(firebaseConfig);\n// const db = getFirestore(app);\n\n// export default function TakeAttendance() {\n//   const [employeeData, setEmployeeData] = useState([]);\n//   const [attendanceData, setAttendanceData] = useState([]); // Initialize attendanceData with an empty array\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const itemsCol = collection(db, 'employeeDetails');\n//       const itemSnapshot = await getDocs(itemsCol);\n//       const data = itemSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n//       setEmployeeData(data);\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const handleAttendanceChange = (e, id) => {\n//     if (e.target.checked) {\n//       // Mark employee as absent\n//       setAttendanceData((prevAttendance) => [...prevAttendance, id]);\n//     } else {\n//       // Mark employee as present\n//       setAttendanceData((prevAttendance) => prevAttendance.filter((absentId) => absentId !== id));\n//     }\n//   };\n\n//   const handleSaveAttendance = async () => {\n//     try {\n//       // Create a new collection \"employeeAttendance\" in the database\n//       const attendanceCol = collection(db, 'employeeAttendance');\n\n//       // Prepare the data for the new collection\n//       const attendanceData = {\n//         date: new Date().toISOString(),\n//         absentEmployees: attendanceData,\n//       };\n\n//       // Add the data to the \"employeeAttendance\" collection\n//       await addDoc(attendanceCol, attendanceData);\n\n//       // Reset the attendanceData state after saving\n//       setAttendanceData([]);\n\n//       alert('Attendance saved successfully!');\n//     } catch (error) {\n//       console.error('Error saving attendance:', error);\n//       alert('Error saving attendance. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard-content-one\" id=\"cont-1\">\n//        <div className=\"breadcrumbs-area\">\n//     <h3>  Take Employee Attendance</h3>\n\n//   </div>\n\n//   <div className=\"card height-auto\">\n//     <div className=\"card-body\">\n//       <div className=\"heading-layout1\">\n\n//       </div>\n//       <table className=\"table display data-table text-nowrap\">\n//         <thead>\n//           <tr>\n//             <th>S.No</th>\n//             <th>Full Name</th>\n//             <th>Employee ID</th>\n//             <th>Absent</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {employeeData.map((employee, index) => (\n//             <tr key={employee.id}>\n//               <td>{index + 1}</td>\n//               <td>{employee.fullName}</td>\n//               <td>{employee.employeeId}</td>\n//               <td>\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={attendanceData.includes(employee.id)}\n//                   onChange={(e) => handleAttendanceChange(e, employee.id)}\n//                 />\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       <button onClick={handleSaveAttendance}>Save Attendance</button>\n//     </div>\n//     </div></div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Aravind/Clients/Sam-Hyper-Business/PayRoll-Software/dremerz-payrollsoftware/src/Takeattendance.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { initializeApp } from 'firebase/app';\r\n// import { getFirestore, collection, getDocs, doc, addDoc } from 'firebase/firestore/lite';\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyA95pWNegQN52jOC8gB2cs9s2BRMHbERR4\",\r\n//   authDomain: \"sam-hyper-business.firebaseapp.com\",\r\n//   projectId: \"sam-hyper-business\",\r\n//   storageBucket: \"sam-hyper-business.appspot.com\",\r\n//   messagingSenderId: \"644102757906\",\r\n//   appId: \"1:644102757906:web:50d98f81cb35e9e52842cb\",\r\n//   measurementId: \"G-F6J99L8CHG\"\r\n// };\r\n\r\n// const app = initializeApp(firebaseConfig);\r\n// const db = getFirestore(app);\r\n\r\n// export default function TakeAttendance() {\r\n//   const [employeeData, setEmployeeData] = useState([]);\r\n//   const [attendanceData, setAttendanceData] = useState([]); // Initialize attendanceData with an empty array\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       const itemsCol = collection(db, 'employeeDetails');\r\n//       const itemSnapshot = await getDocs(itemsCol);\r\n//       const data = itemSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n//       setEmployeeData(data);\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const handleAttendanceChange = (e, id) => {\r\n//     if (e.target.checked) {\r\n//       // Mark employee as absent\r\n//       setAttendanceData((prevAttendance) => [...prevAttendance, id]);\r\n//     } else {\r\n//       // Mark employee as present\r\n//       setAttendanceData((prevAttendance) => prevAttendance.filter((absentId) => absentId !== id));\r\n//     }\r\n//   };\r\n\r\n//   const handleSaveAttendance = async () => {\r\n//     try {\r\n//       // Create a new collection \"employeeAttendance\" in the database\r\n//       const attendanceCol = collection(db, 'employeeAttendance');\r\n\r\n//       // Prepare the data for the new collection\r\n//       const attendanceData = {\r\n//         date: new Date().toISOString(),\r\n//         absentEmployees: attendanceData,\r\n//       };\r\n\r\n//       // Add the data to the \"employeeAttendance\" collection\r\n//       await addDoc(attendanceCol, attendanceData);\r\n\r\n//       // Reset the attendanceData state after saving\r\n//       setAttendanceData([]);\r\n\r\n//       alert('Attendance saved successfully!');\r\n//     } catch (error) {\r\n//       console.error('Error saving attendance:', error);\r\n//       alert('Error saving attendance. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard-content-one\" id=\"cont-1\">\r\n//        <div className=\"breadcrumbs-area\">\r\n//     <h3>  Take Employee Attendance</h3>\r\n   \r\n//   </div>\r\n\r\n//   <div className=\"card height-auto\">\r\n//     <div className=\"card-body\">\r\n//       <div className=\"heading-layout1\">\r\n        \r\n        \r\n//       </div>\r\n//       <table className=\"table display data-table text-nowrap\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>S.No</th>\r\n//             <th>Full Name</th>\r\n//             <th>Employee ID</th>\r\n//             <th>Absent</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {employeeData.map((employee, index) => (\r\n//             <tr key={employee.id}>\r\n//               <td>{index + 1}</td>\r\n//               <td>{employee.fullName}</td>\r\n//               <td>{employee.employeeId}</td>\r\n//               <td>\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={attendanceData.includes(employee.id)}\r\n//                   onChange={(e) => handleAttendanceChange(e, employee.id)}\r\n//                 />\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       <button onClick={handleSaveAttendance}>Save Attendance</button>\r\n//     </div>\r\n//     </div></div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}